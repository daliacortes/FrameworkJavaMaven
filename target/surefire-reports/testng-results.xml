<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="97756" started-at="2022-05-11T18:02:09 UYT" finished-at="2022-05-11T18:03:46 UYT">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.runner@20d28811]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Surefire test" duration-ms="97756" started-at="2022-05-11T18:02:09 UYT" finished-at="2022-05-11T18:03:46 UYT">
      <class name="runner.runner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.runner@20d28811]" name="setUpClass" is-config="true" duration-ms="160" started-at="2022-05-11T18:02:09 UYT" finished-at="2022-05-11T18:02:09 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.runner@20d28811]" name="runScenario" duration-ms="15219" started-at="2022-05-11T18:02:09 UYT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-11T18:02:24 UYT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add Pet"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage pet API services"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.runner@20d28811]" name="runScenario" duration-ms="9248" started-at="2022-05-11T18:02:24 UYT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-11T18:02:33 UYT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Find Pet by id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage pet API services"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.runner@20d28811]" name="runScenario" duration-ms="9666" started-at="2022-05-11T18:02:33 UYT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-11T18:02:43 UYT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update an existing pet"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Manage pet API services"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.runner@20d28811]" name="runScenario" duration-ms="25542" started-at="2022-05-11T18:02:43 UYT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-11T18:03:09 UYT">
          <params>
            <param index="0">
              <value>
                <![CDATA["To add a laptop to the shopping cart"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["By Articles"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.runner@20d28811]" name="runScenario" duration-ms="21411" started-at="2022-05-11T18:03:09 UYT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-11T18:03:30 UYT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login Successful"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login y Logout"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.runner@20d28811]" name="runScenario" duration-ms="16360" started-at="2022-05-11T18:03:30 UYT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-05-11T18:03:46 UYT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register a user Successful"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Register a user"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.runner@20d28811]" name="tearDownClass" is-config="true" duration-ms="8" started-at="2022-05-11T18:03:46 UYT" finished-at="2022-05-11T18:03:46 UYT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.runner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
